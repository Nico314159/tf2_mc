TextProps.font("font", "_foo_", "tf2:_foo_");
TextProp.font("default_font", "minecraft:default");
TextProp.hoverText(
    "info_atk_def",
    "&<red>RED &<white>starts with all the control points, and &<blue>BLU must capture &<italic>all &<!italic>of them in order to win. Once a point is taken, it cannot be reclaimed by &<red>RED. &<white>If the timer runs out, &<red>RED &<white>wins no matter how much progress &<blue>BLU &<white>has made."
);
TextProp.hoverText(
    "info_control_points",
    "Each team starts out owning half the control points; whichever team captures all of them wins. Stalemate if the timer runs out."
);
TextProp.hoverText(
    "info_koth",
    "There is just one control point that starts out unowned. To win, your team needs to capture && keep the control point for a total of 3 minutes. Your team's clock will pause if the other team takes over."
);
TextProps.nbt(
    propertyName = "space",
    indexString  = "_part_",
    type         = storage,
    source       = "tf2:control_points",
    path         = info[$(i)][7]._part_,
    interpret    = true
);
TextProps.nbt(
    propertyName = "point",
    indexString  = "_j_",
    type         = storage,
    source       = "tf2:control_points",
    path         = info[$(i)][_j_].main,
    interpret    = true
);
TextProps.nbt(
    propertyName = "gui_wheel",
    indexString  = "_path_",
    type         = storage,
    source       = "tf2:lookup",
    path         = points[0].wheel._path_,
    interpret    = true
);
TextProps.nbt(
    propertyName = "item_of",
    indexString  = "_selector_",
    type         = entity,
    source       = "_selector_",
    path         = SelectedItem.components.minecraft:custom_name,
    interpret    = true
);
TextProps.nbt(
    propertyName = "HUD",
    indexString  = "key",
    type         = storage,
    source       = "tf2:actionbar",
    path         = key,
    interpret    = true
);
TextProp.nbt(
    propertyName = "kill_verb",
    type         = storage,
    source       = "tf2:lookup",
    path         = damages[-1].kill_verb
);
TextProp.nbt(
    propertyName = "weapon_name",
    type         = storage,
    source       = "tf2:lookup",
    path         = damages[-1].weapon,
    interpret    = true
);
TextProp.keybind("main_fire", "key.use");
TextProp.keybind("alt_fire",  "key.swapOffhand");
TextProp.keybind("reload",    "key.drop");
TextProp.keybind("not_used",  "key.attack");
TextProps.keybind(propertyName="control", indexString="_i_", keybind="key._i_");
TextProp.clickCommand("toggle_autoreload", () => {trigger autoreload;});

@lazy function controls_reminder() {
    Text.tellraw(@s, `
&<underlined>Control Scheme:
&<gray>Main Attack (both guns && melee) = &<white,bold,main_fire>
&<gray>Alt Fire (zoom-in, revving, etc) = &<white,bold,alt_fire>
&<gray>Reload = &<white,bold,reload> &<white,underlined,toggle_autoreload>[toggle autoreload]
&<gray>You &<bold,italic,red>NEVER &<gray>need to press &<white,bold,not_used>
    `);
}
Trigger.add(controls, () => {controls_reminder();});
// ^ not a typo ^ â€” passing the function name directly doesn't work properly for lazy functions

Trigger.add(autoreload, () => {
    if (entity @s[tag=tf2.autoreload]) {
        Text.tellraw(@s, "Autoreload is now &<gray,bold>disabled.");
        tag @s remove tf2.autoreload;
    }
    else {
        Text.tellraw(@s, "Autoreload is now &<yellow,bold>enabled.");
        tag @s add tf2.autoreload;
    }
});

@lazy function generate_body_model(x) {
    new loot_table(class.$x.leg_model) {
        "pools": [{
            "rolls": 1,
            "entries": [{
                "type": "minecraft:item",
                "name": "minecraft:iron_leggings",
                "functions": [
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:red",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 1 }
                         	},
                         	{
		                        "condition": "minecraft:inverted",
                        		"term": {
                        			"condition": "minecraft:reference",
                        			"name": "tf2:ubercharge"
                        		}
	                        }
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:red_uber",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 1 }
                         	},
                         	{
                         		"condition": "minecraft:reference",
                         		"name": "tf2:ubercharge"
                         	}
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:blu",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 2 }
                         	},
                         	{
		                        "condition": "minecraft:inverted",
                        		"term": {
                        			"condition": "minecraft:reference",
                        			"name": "tf2:ubercharge"
                        		}
	                        }
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:blu_uber",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 2 }
                         	},
                         	{
                         		"condition": "minecraft:reference",
                         		"name": "tf2:ubercharge"
                         	}
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:enchantments": {
                                "minecraft:binding_curse": 1
                            },
                            "minecraft:enchantment_glint_override": false
                        }
                    }
                ]
            }]
        }]
    }
    
    new loot_table(class.$x.chest_model) {
        "pools": [{
            "rolls": 1,
            "entries": [{
                "type": "minecraft:item",
                "name": "minecraft:iron_chestplate",
                "functions": [
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:red",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 1 }
                         	},
                         	{
		                        "condition": "minecraft:inverted",
                        		"term": {
                        			"condition": "minecraft:reference",
                        			"name": "tf2:ubercharge"
                        		}
	                        }
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:red_uber",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 1 }
                         	},
                         	{
                         		"condition": "minecraft:reference",
                         		"name": "tf2:ubercharge"
                         	}
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:blu",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 2 }
                         	},
                         	{
		                        "condition": "minecraft:inverted",
                        		"term": {
                        			"condition": "minecraft:reference",
                        			"name": "tf2:ubercharge"
                        		}
	                        }
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:trim": {
                                "material": "tf2:blu_uber",
                                "pattern": "tf2:$x"
                            }
                        },
                        "conditions": [
                         	{
                         		"condition": "minecraft:entity_scores",
                         		"entity": "this",
                         		"scores": { "tf2.team": 2 }
                         	},
                         	{
                         		"condition": "minecraft:reference",
                         		"name": "tf2:ubercharge"
                         	}
                        ]
                    },
                    {
                        "function": "minecraft:set_components",
                        "components": {
                            "minecraft:enchantments": {
                                "minecraft:binding_curse": 1
                            },
                            "minecraft:enchantment_glint_override": false
                        }
                    }
                ]
            }]
        }]
    }

    new loot_table(class.$x.head) {
		"pools": [{
			"rolls": 1,
			"entries": [{
				"type": "minecraft:item",
				"name": "paper"
			}],
			"functions": [
                {
                    "function": "minecraft:set_components",
                    "components": {
                        "minecraft:item_model": "tf2:misc/head"
                    }
                },
				{
					"function": "minecraft:set_custom_model_data",
					"strings": {
						"values": ["$x"],
						"mode": "replace_all"
					}
				},
				{
					"function": "minecraft:set_custom_model_data",
					"strings": {
						"values": ["red"],
						"mode": "append"
					},
					"conditions": [
						{
							"condition": "minecraft:entity_scores",
							"entity": "this",
							"scores": {"tf2.team": 1}
						}
					]
				},
				{
					"function": "minecraft:set_custom_model_data",
					"strings": {
						"values": ["blu"],
						"mode": "append"
					},
					"conditions": [
						{
							"condition": "minecraft:entity_scores",
							"entity": "this",
							"scores": {"tf2.team": 2}
						}
					]
				},
				{
					"function": "minecraft:set_custom_model_data",
					"strings": {
						"values": ["uber"],
						"mode": "append"
					},
					"conditions": [
						{
							"condition": "minecraft:reference",
							"name": "tf2:ubercharge"
						}
					]
				}
			]
		}]
	}
}

// this code must run BEFORE src/classes/* is imported
JMC.pythonFile("item_script.py", jmc=true);