new trim_pattern(soldier) {
    "asset_id": "tf2:soldier",
    "description": {
        "translate": "trim_pattern.tf2.soldier"
    },
    "template_item": "minecraft:stick"
}
generate_body_model(soldier);

JMC.python(`
make_weapon(
    Class.SOLDIER, slot=0, name='Rocket Launcher',
    attributes={'damage': {'base': 90, 'maxRamp': 1.25}, 'attackDelay': 0.8, 'reloadDelay': [0.92, 0.8], 'clip': 4, 'ammo': 20, 'isProjectile': true},
    projectile={
        'spawn': [-0.2236, -0.05715, -0.447675], 
        'explosion': {'radius': 146, 'selfDamage': 54}, 
        'speed': 1100, 'hitbox': 0, 'has_trail': true,
        'block_collision': {'mode': Collision.IMPACT},
        'entity_collision': {'mode': Collision.IMPACT},
    },
)
`, jmc=true);

JMC.python(`
make_weapon(
    Class.SOLDIER, slot=1, name='Shotgun', bullets=[3, 3, 1], spread=[100, 250],
    attributes={'damage': {'base': 6, 'maxRamp': 1.5}, 'attackDelay': 0.625, 'reloadDelay': [1.005, 0.51], 'clip': 6, 'ammo': 32}
)
`, jmc=true);

JMC.python(`
make_weapon(
    Class.SOLDIER, slot=2, 
    name='Shovel',
    attributes={'damage': {'base': 65}, 'attackDelay': 0.8, 'range': 3.2, 'isMelee': true}
)
`, jmc=true);


class Class.Soldier {
    // ### USEFUL NOTES ###
    // spawn rocket at ^-12hu   ^-3hu     ^-23.5hu
    //               = ^-0.2236 ^-0.05715 ^-0.447675

    // rocket speed = 1100hu/s
    //              = 20.96m/s
    //              = 1.048 blocks/tick
    // scale vector by factor of 1.048

    function give() {
        tf2.class:@s = Class.SOLDIER;
        tf2.max_health:@s = tf2.health:@s = 200;
        attribute @s minecraft:movement_speed base set EVAL(BASE_SPEED * 0.85);

        clear @s;
        loot replace entity @s hotbar.0 loot tf2:class/soldier/rocket_launcher;
        loot replace entity @s hotbar.1 loot tf2:class/soldier/shotgun;
        loot replace entity @s hotbar.2 loot tf2:class/soldier/shovel;
        loot replace entity @s armor.legs loot tf2:class/soldier/leg_model;
        loot replace entity @s armor.chest loot tf2:class/soldier/chest_model;

        lookup::inventory = @s::Inventory;
        tf2.primary_maxClip:@s = tf2.primary_clip:@s = lookup::inventory[0].components.minecraft:custom_data.attributes.clip;
        tf2.primary_maxAmmo:@s = tf2.primary_ammo:@s = lookup::inventory[0].components.minecraft:custom_data.attributes.ammo;
        tf2.secondary_maxClip:@s = tf2.secondary_clip:@s = lookup::inventory[1].components.minecraft:custom_data.attributes.clip;
        tf2.secondary_maxAmmo:@s = tf2.secondary_ammo:@s = lookup::inventory[1].components.minecraft:custom_data.attributes.ammo;
    }
    @lazy
    function tick() {
        Weapons.get_ammo();
        HUD.actionbar();
        Weapons.set_ammo();

        Class.Soldier.inventory_lock();
    }
    function inventory_lock() {
        item replace entity @s weapon.offhand with air;
        loot replace entity @s hotbar.0 loot tf2:class/soldier/rocket_launcher;
        $_count_ = clear @s *[custom_data~{key: EVAL(Class.SOLDIER * 10 + 0)}] 0;
        if ($_count_ != 1) clear @s *[custom_data~{key: EVAL(Class.SOLDIER * 10 + 0)}];
        if ($_count_ != 1) loot replace entity @s hotbar.0 loot tf2:class/soldier/rocket_launcher;

        loot replace entity @s hotbar.1 loot tf2:class/soldier/shotgun;
        $_count_ = clear @s *[custom_data~{key: EVAL(Class.SOLDIER * 10 + 1)}] 0;
        if ($_count_ != 1) clear @s *[custom_data~{key: EVAL(Class.SOLDIER * 10 + 1)}];
        if ($_count_ != 1) loot replace entity @s hotbar.1 loot tf2:class/soldier/shotgun;

        loot replace entity @s hotbar.2 loot tf2:class/soldier/shovel;
        $_count_ = clear @s *[custom_data~{key: EVAL(Class.SOLDIER * 10 + 2)}] 0;
        if ($_count_ != 1) clear @s *[custom_data~{key: EVAL(Class.SOLDIER * 10 + 2)}];
        if ($_count_ != 1) loot replace entity @s hotbar.2 loot tf2:class/soldier/shovel;

        loot replace entity @s armor.legs loot tf2:class/soldier/leg_model;
        $_count_ = clear @s iron_leggings 0;
        if ($_count_ != 1) clear @s iron_leggings;
        if ($_count_ != 1) loot replace entity @s armor.legs loot tf2:class/soldier/leg_model;

        loot replace entity @s armor.chest loot tf2:class/soldier/chest_model;
        $_count_ = clear @s iron_chestplate 0;
        if ($_count_ != 1) clear @s iron_chestplate;
        if ($_count_ != 1) loot replace entity @s armor.chest loot tf2:class/soldier/chest_model;

        loot replace entity @s armor.head loot tf2:class/soldier/head;
        $_count_ = clear @s paper 0;
        if ($_count_ != 1) clear @s paper;
        if ($_count_ != 1) loot replace entity @s armor.head loot tf2:class/soldier/head;
    }
}